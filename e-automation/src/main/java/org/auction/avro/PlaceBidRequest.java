/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.auction.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PlaceBidRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5185937540258396322L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PlaceBidRequest\",\"namespace\":\"org.auction.avro\",\"doc\":\"\",\"fields\":[{\"name\":\"firstName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"address\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"state\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pin\",\"type\":\"int\"},{\"name\":\"phone\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"productId\",\"type\":\"int\"},{\"name\":\"bidAmount\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PlaceBidRequest> ENCODER =
      new BinaryMessageEncoder<PlaceBidRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PlaceBidRequest> DECODER =
      new BinaryMessageDecoder<PlaceBidRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PlaceBidRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PlaceBidRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PlaceBidRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PlaceBidRequest>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PlaceBidRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PlaceBidRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PlaceBidRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PlaceBidRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String firstName;
  private java.lang.String lastName;
  private java.lang.String address;
  private java.lang.String city;
  private java.lang.String state;
  private int pin;
  private java.lang.String phone;
  private java.lang.String email;
  private int productId;
  private double bidAmount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PlaceBidRequest() {}

  /**
   * All-args constructor.
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param address The new value for address
   * @param city The new value for city
   * @param state The new value for state
   * @param pin The new value for pin
   * @param phone The new value for phone
   * @param email The new value for email
   * @param productId The new value for productId
   * @param bidAmount The new value for bidAmount
   */
  public PlaceBidRequest(java.lang.String firstName, java.lang.String lastName, java.lang.String address, java.lang.String city, java.lang.String state, java.lang.Integer pin, java.lang.String phone, java.lang.String email, java.lang.Integer productId, java.lang.Double bidAmount) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.address = address;
    this.city = city;
    this.state = state;
    this.pin = pin;
    this.phone = phone;
    this.email = email;
    this.productId = productId;
    this.bidAmount = bidAmount;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return firstName;
    case 1: return lastName;
    case 2: return address;
    case 3: return city;
    case 4: return state;
    case 5: return pin;
    case 6: return phone;
    case 7: return email;
    case 8: return productId;
    case 9: return bidAmount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: firstName = value$ != null ? value$.toString() : null; break;
    case 1: lastName = value$ != null ? value$.toString() : null; break;
    case 2: address = value$ != null ? value$.toString() : null; break;
    case 3: city = value$ != null ? value$.toString() : null; break;
    case 4: state = value$ != null ? value$.toString() : null; break;
    case 5: pin = (java.lang.Integer)value$; break;
    case 6: phone = value$ != null ? value$.toString() : null; break;
    case 7: email = value$ != null ? value$.toString() : null; break;
    case 8: productId = (java.lang.Integer)value$; break;
    case 9: bidAmount = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.String getFirstName() {
    return firstName;
  }



  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.String getLastName() {
    return lastName;
  }



  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.String getAddress() {
    return address;
  }



  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.String getCity() {
    return city;
  }



  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }



  /**
   * Gets the value of the 'pin' field.
   * @return The value of the 'pin' field.
   */
  public int getPin() {
    return pin;
  }



  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.String getPhone() {
    return phone;
  }



  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }



  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public int getProductId() {
    return productId;
  }



  /**
   * Gets the value of the 'bidAmount' field.
   * @return The value of the 'bidAmount' field.
   */
  public double getBidAmount() {
    return bidAmount;
  }



  /**
   * Creates a new PlaceBidRequest RecordBuilder.
   * @return A new PlaceBidRequest RecordBuilder
   */
  public static org.auction.avro.PlaceBidRequest.Builder newBuilder() {
    return new org.auction.avro.PlaceBidRequest.Builder();
  }

  /**
   * Creates a new PlaceBidRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PlaceBidRequest RecordBuilder
   */
  public static org.auction.avro.PlaceBidRequest.Builder newBuilder(org.auction.avro.PlaceBidRequest.Builder other) {
    if (other == null) {
      return new org.auction.avro.PlaceBidRequest.Builder();
    } else {
      return new org.auction.avro.PlaceBidRequest.Builder(other);
    }
  }

  /**
   * Creates a new PlaceBidRequest RecordBuilder by copying an existing PlaceBidRequest instance.
   * @param other The existing instance to copy.
   * @return A new PlaceBidRequest RecordBuilder
   */
  public static org.auction.avro.PlaceBidRequest.Builder newBuilder(org.auction.avro.PlaceBidRequest other) {
    if (other == null) {
      return new org.auction.avro.PlaceBidRequest.Builder();
    } else {
      return new org.auction.avro.PlaceBidRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for PlaceBidRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PlaceBidRequest>
    implements org.apache.avro.data.RecordBuilder<PlaceBidRequest> {

    private java.lang.String firstName;
    private java.lang.String lastName;
    private java.lang.String address;
    private java.lang.String city;
    private java.lang.String state;
    private int pin;
    private java.lang.String phone;
    private java.lang.String email;
    private int productId;
    private double bidAmount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.auction.avro.PlaceBidRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.city)) {
        this.city = data().deepCopy(fields()[3].schema(), other.city);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.pin)) {
        this.pin = data().deepCopy(fields()[5].schema(), other.pin);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.phone)) {
        this.phone = data().deepCopy(fields()[6].schema(), other.phone);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.email)) {
        this.email = data().deepCopy(fields()[7].schema(), other.email);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.productId)) {
        this.productId = data().deepCopy(fields()[8].schema(), other.productId);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.bidAmount)) {
        this.bidAmount = data().deepCopy(fields()[9].schema(), other.bidAmount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing PlaceBidRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(org.auction.avro.PlaceBidRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.city)) {
        this.city = data().deepCopy(fields()[3].schema(), other.city);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pin)) {
        this.pin = data().deepCopy(fields()[5].schema(), other.pin);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phone)) {
        this.phone = data().deepCopy(fields()[6].schema(), other.phone);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.email)) {
        this.email = data().deepCopy(fields()[7].schema(), other.email);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.productId)) {
        this.productId = data().deepCopy(fields()[8].schema(), other.productId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.bidAmount)) {
        this.bidAmount = data().deepCopy(fields()[9].schema(), other.bidAmount);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.String getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setFirstName(java.lang.String value) {
      validate(fields()[0], value);
      this.firstName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.String getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setLastName(java.lang.String value) {
      validate(fields()[1], value);
      this.lastName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.String getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setAddress(java.lang.String value) {
      validate(fields()[2], value);
      this.address = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearAddress() {
      address = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.String getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setCity(java.lang.String value) {
      validate(fields()[3], value);
      this.city = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearCity() {
      city = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }


    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setState(java.lang.String value) {
      validate(fields()[4], value);
      this.state = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearState() {
      state = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'pin' field.
      * @return The value.
      */
    public int getPin() {
      return pin;
    }


    /**
      * Sets the value of the 'pin' field.
      * @param value The value of 'pin'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setPin(int value) {
      validate(fields()[5], value);
      this.pin = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'pin' field has been set.
      * @return True if the 'pin' field has been set, false otherwise.
      */
    public boolean hasPin() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'pin' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearPin() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.String getPhone() {
      return phone;
    }


    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setPhone(java.lang.String value) {
      validate(fields()[6], value);
      this.phone = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setEmail(java.lang.String value) {
      validate(fields()[7], value);
      this.email = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearEmail() {
      email = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public int getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setProductId(int value) {
      validate(fields()[8], value);
      this.productId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearProductId() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidAmount' field.
      * @return The value.
      */
    public double getBidAmount() {
      return bidAmount;
    }


    /**
      * Sets the value of the 'bidAmount' field.
      * @param value The value of 'bidAmount'.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder setBidAmount(double value) {
      validate(fields()[9], value);
      this.bidAmount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'bidAmount' field has been set.
      * @return True if the 'bidAmount' field has been set, false otherwise.
      */
    public boolean hasBidAmount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'bidAmount' field.
      * @return This builder.
      */
    public org.auction.avro.PlaceBidRequest.Builder clearBidAmount() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PlaceBidRequest build() {
      try {
        PlaceBidRequest record = new PlaceBidRequest();
        record.firstName = fieldSetFlags()[0] ? this.firstName : (java.lang.String) defaultValue(fields()[0]);
        record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.String) defaultValue(fields()[1]);
        record.address = fieldSetFlags()[2] ? this.address : (java.lang.String) defaultValue(fields()[2]);
        record.city = fieldSetFlags()[3] ? this.city : (java.lang.String) defaultValue(fields()[3]);
        record.state = fieldSetFlags()[4] ? this.state : (java.lang.String) defaultValue(fields()[4]);
        record.pin = fieldSetFlags()[5] ? this.pin : (java.lang.Integer) defaultValue(fields()[5]);
        record.phone = fieldSetFlags()[6] ? this.phone : (java.lang.String) defaultValue(fields()[6]);
        record.email = fieldSetFlags()[7] ? this.email : (java.lang.String) defaultValue(fields()[7]);
        record.productId = fieldSetFlags()[8] ? this.productId : (java.lang.Integer) defaultValue(fields()[8]);
        record.bidAmount = fieldSetFlags()[9] ? this.bidAmount : (java.lang.Double) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PlaceBidRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<PlaceBidRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PlaceBidRequest>
    READER$ = (org.apache.avro.io.DatumReader<PlaceBidRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.firstName);

    out.writeString(this.lastName);

    out.writeString(this.address);

    out.writeString(this.city);

    out.writeString(this.state);

    out.writeInt(this.pin);

    out.writeString(this.phone);

    out.writeString(this.email);

    out.writeInt(this.productId);

    out.writeDouble(this.bidAmount);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.firstName = in.readString();

      this.lastName = in.readString();

      this.address = in.readString();

      this.city = in.readString();

      this.state = in.readString();

      this.pin = in.readInt();

      this.phone = in.readString();

      this.email = in.readString();

      this.productId = in.readInt();

      this.bidAmount = in.readDouble();

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.firstName = in.readString();
          break;

        case 1:
          this.lastName = in.readString();
          break;

        case 2:
          this.address = in.readString();
          break;

        case 3:
          this.city = in.readString();
          break;

        case 4:
          this.state = in.readString();
          break;

        case 5:
          this.pin = in.readInt();
          break;

        case 6:
          this.phone = in.readString();
          break;

        case 7:
          this.email = in.readString();
          break;

        case 8:
          this.productId = in.readInt();
          break;

        case 9:
          this.bidAmount = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










